version: '3.8'

services:
  app:
    image: openjdk:17-jdk-slim
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: "secret"
      # MySQL (容器内用 3306)
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/your_database?useSSL=false&serverTimezone=UTC&characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: your_password

      # MongoDB (使用 test 用户，认证库 admin，但用户属于 ai_db)
      SPRING_DATA_MONGODB_URI: mongodb://test:123456@mongodb:27017/ai_db?authSource=admin

      # Redis
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: 123456
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: your_password
      MYSQL_DATABASE: your_database
    ports:
      - "3308:3306"  # 宿主机3308 → 容器3306
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-uroot", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:6.2-alpine
    command: redis-server --requirepass 123456
    ports:
      - "6380:6379" # 宿主机6380 → 容器6379
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "123456", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  mongodb:
    image: mongo:5.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD", "mongosh", "-u", "root", "-p", "123456", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 3s
      retries: 10

volumes:
  mysql_data:
  mongo_data:
